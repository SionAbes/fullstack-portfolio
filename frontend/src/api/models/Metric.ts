/* tslint:disable */
/* eslint-disable */
/**
 * Fullstack Portfolio API
 * FastAPI of Fullstack Portfolio
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreateMachine,
    CreateMachineFromJSON,
    CreateMachineFromJSONTyped,
    CreateMachineToJSON,
    CreateMetric,
    CreateMetricFromJSON,
    CreateMetricFromJSONTyped,
    CreateMetricToJSON,
    CreatedMetricBase,
    CreatedMetricBaseFromJSON,
    CreatedMetricBaseFromJSONTyped,
    CreatedMetricBaseToJSON,
} from './';

/**
 * 
 * @export
 * @interface Metric
 */
export interface Metric {
    /**
     * 
     * @type {string}
     * @memberof Metric
     */
    processedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Metric
     */
    eventAt?: string;
    /**
     * 
     * @type {CreateMachine}
     * @memberof Metric
     */
    machine?: CreateMachine;
    /**
     * 
     * @type {string}
     * @memberof Metric
     */
    oem?: string;
    /**
     * 
     * @type {string}
     * @memberof Metric
     */
    metric?: string;
    /**
     * 
     * @type {string}
     * @memberof Metric
     */
    value?: string;
    /**
     * 
     * @type {string}
     * @memberof Metric
     */
    unit?: string;
    /**
     * 
     * @type {number}
     * @memberof Metric
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Metric
     */
    userId: number;
    /**
     * 
     * @type {string}
     * @memberof Metric
     */
    createdAt: string;
}

export function MetricFromJSON(json: any): Metric {
    return MetricFromJSONTyped(json, false);
}

export function MetricFromJSONTyped(json: any, ignoreDiscriminator: boolean): Metric {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'processedAt': !exists(json, 'processed_at') ? undefined : json['processed_at'],
        'eventAt': !exists(json, 'event_at') ? undefined : json['event_at'],
        'machine': !exists(json, 'machine') ? undefined : CreateMachineFromJSON(json['machine']),
        'oem': !exists(json, 'oem') ? undefined : json['oem'],
        'metric': !exists(json, 'metric') ? undefined : json['metric'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'unit': !exists(json, 'unit') ? undefined : json['unit'],
        'id': json['id'],
        'userId': json['user_id'],
        'createdAt': json['created_at'],
    };
}

export function MetricToJSON(value?: Metric | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'processed_at': value.processedAt,
        'event_at': value.eventAt,
        'machine': CreateMachineToJSON(value.machine),
        'oem': value.oem,
        'metric': value.metric,
        'value': value.value,
        'unit': value.unit,
        'id': value.id,
        'user_id': value.userId,
        'created_at': value.createdAt,
    };
}
