openapi: 3.0.2
info:
  title: Fullstack Portfolio API
  version: 1.0.0
  license:
    name: private
  description: FastAPI of Fullstack Portfolio
servers:
  - description: local
    url: http://localhost:8000/api/v1
  - description: local-fastapi
    url: http://localhost
paths:
  /adapters/:
    post:
      summary: creates a new adapter instance
      operationId: createAdapter
      requestBody:
        $ref: '#/components/requestBodies/createAdapter'
      responses:
        '201':
          description: the created adapter instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adapter'
        '409':
          description: this adapter already exissts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
        - Adapters
    get:
      summary: fetch adapter instances
      operationId: fetchAdapters
      responses:
        '201':
          description: A list of adapter instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adapters'
        '404':
          description: Not found
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
        - Adapters
  /machines/:
    get:
      summary: fetches machines
      operationId: fetchMachines
      responses:
        '201':
          description: A list of machines
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machines'
        '404':
          description: Not found
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
        - Machines
    post:
      summary: creates a new machine
      operationId: createMachine
      requestBody:
        $ref: '#/components/requestBodies/CreateMachine'
      responses:
        '201':
          description: the newly created machine
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machines'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
        - Machines
  /users/:
    post:
      summary: creates a new user
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/createUser'
      responses:
        '201':
          description: the created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '409':
          description: conflict a user with this email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
        - Users
    get:
      summary: fetches users
      operationId: fetchUsers
      responses:
        '201':
          description: A list of the requested users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '404':
          description: Not found
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
        - Users
  /users/{id}:
    put:
      summary: updates a users information by its id
      operationId: updateUserByID
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/UpdateUser'
      responses:
        '200':
          description: the updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '404':
          description: Not found
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
        - Users
    delete:
      summary: deletes a users by its id
      operationId: deleteUserByID
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: The resource was deleted succesfully.
        '404':
          description: Not found
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
        - Users
  /auth/login/:
    post:
      summary: login a user with credentials
      operationId: login
      security: []
      requestBody:
        $ref: '#/components/requestBodies/Credentials'
      responses:
        '200':
          description: the JWT token of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '404':
          description: Not found
        default:
          $ref: '#/components/responses/DefaultError'
      tags:
        - Auth
  /auth/refresh/:
    post:
      summary: refresh an access token, to extend its lifetime
      operationId: refresh
      security: []
      responses:
        '200':
          description: A refreshed access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '404':
          description: Not found
      tags:
        - Auth
components:
  securitySchemes:
    userAccessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
    contactAccessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    GenericError:
      type: object
      properties:
        details:
          type: string
    baseAdapter:
      type: object
      required:
        - id
        - user_id
        - created_at
        - updated_at
        - adapter_name
        - cron_expression
        - data_url
      properties:
        id:
          type: integer
        user_id:
          type: integer
        created_at:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        updated_at:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        adapter_name:
          type: string
        cron_expression:
          type: string
        data_url:
          type: string
    baseWackerNeusonKramerAdapter:
      properties:
        token_url:
          type: string
        username:
          type: string
        password:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
      required:
        - token_url
        - username
        - password
        - client_id
        - client_secret
      type: object
    wackerNeusonKramerAdapter:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseAdapter'
        - $ref: '#/components/schemas/baseWackerNeusonKramerAdapter'
    baseVolvoCaretrackAdapter:
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
      type: object
    volvoCaretrackAdapter:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseAdapter'
        - $ref: '#/components/schemas/baseVolvoCaretrackAdapter'
    baseLiebherrLidatAdapter:
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
      type: object
    liebherrLidatAdapter:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseAdapter'
        - $ref: '#/components/schemas/baseLiebherrLidatAdapter'
    baseTakeuchiTfmAdapter:
      properties:
        client_secret:
          type: string
        client_id:
          type: string
        token_url:
          type: string
      required:
        - client_secret
        - client_id
        - token_url
      type: object
    takeuchiTfmAdapter:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseAdapter'
        - $ref: '#/components/schemas/baseTakeuchiTfmAdapter'
    adapter:
      type: object
      oneOf:
        - $ref: '#/components/schemas/wackerNeusonKramerAdapter'
        - $ref: '#/components/schemas/volvoCaretrackAdapter'
        - $ref: '#/components/schemas/liebherrLidatAdapter'
        - $ref: '#/components/schemas/takeuchiTfmAdapter'
      discriminator:
        propertyName: adapter_name
    adapters:
      type: array
      items:
        $ref: '#/components/schemas/adapter'
    baseCreateAdapter:
      type: object
      required:
        - data_url
        - adapter_name
        - cron_expression
      properties:
        adapter_name:
          type: string
        data_url:
          type: string
        cron_expression:
          type: string
    createWackerNeusonKramerAdapter:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseCreateAdapter'
        - $ref: '#/components/schemas/baseWackerNeusonKramerAdapter'
    createVolvoCaretrackAdapter:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseCreateAdapter'
        - $ref: '#/components/schemas/baseVolvoCaretrackAdapter'
    createLiebherrLidatAdapter:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseCreateAdapter'
        - $ref: '#/components/schemas/baseLiebherrLidatAdapter'
    createTakeuchiTfmAdapter:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseCreateAdapter'
        - $ref: '#/components/schemas/baseTakeuchiTfmAdapter'
    createAdapter:
      type: object
      oneOf:
        - $ref: '#/components/schemas/createWackerNeusonKramerAdapter'
        - $ref: '#/components/schemas/createVolvoCaretrackAdapter'
        - $ref: '#/components/schemas/createLiebherrLidatAdapter'
        - $ref: '#/components/schemas/createTakeuchiTfmAdapter'
      discriminator:
        propertyName: adapter_name
    machine:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - oem_name
        - user_id
      properties:
        id:
          type: integer
        user_id:
          type: integer
        created_at:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        updated_at:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        unit_installed_at:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        oem_name:
          type: string
        model:
          type: string
        make:
          type: string
        equipment_id:
          type: string
        serial_number:
          type: string
        pin:
          type: string
    Machines:
      type: array
      items:
        $ref: '#/components/schemas/machine'
    CreateMachine:
      type: object
      required:
        - oem_name
        - model
        - make
        - user_id
      properties:
        user_id:
          type: integer
        unit_installed_at:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        oem_name:
          type: string
        model:
          type: string
        make:
          type: string
        equipment_id:
          type: string
        serial_number:
          type: string
        pin:
          type: string
    user:
      type: object
      properties:
        id:
          type: integer
        last_login:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        date_joined:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        is_superuser:
          type: boolean
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
    Users:
      type: array
      items:
        $ref: '#/components/schemas/user'
    CreateUser:
      type: object
      required:
        - email
        - password
        - is_superuser
      properties:
        is_superuser:
          type: boolean
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
    UpdateUser:
      type: object
      properties:
        is_superuser:
          type: boolean
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
    Credentials:
      type: object
      required:
        - password
        - email
      properties:
        username:
          type: string
        password:
          type: string
          format: password
        scope:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
    Token:
      type: object
      required:
        - refresh_token
        - access_token
      properties:
        refresh_token:
          type: string
        access_token:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        last_login:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        date_joined:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        is_superuser:
          type: boolean
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
    LoginResponse:
      type: object
      required:
        - user
      properties:
        user:
          $ref: '#/components/schemas/User'
      allOf:
        - $ref: '#/components/schemas/Token'
  responses:
    DefaultError:
      description: Default Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericError'
  requestBodies:
    createAdapter:
      description: creates a new adapter instance
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAdapter'
    CreateMachine:
      description: create a new machine
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateMachine'
    createUser:
      description: creates a new user
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUser'
    UpdateUser:
      description: updates a new user
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUser'
    Credentials:
      description: credentials to login
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credentials'
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: integer
security:
  - userAccessToken: []
